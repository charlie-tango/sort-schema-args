const graphql = require("graphql");

/**
 * Fix the Umbraco Heartcore spec, by injecting missing arguments.
 * */
function applyUmbracoHeartcoreFixes(type, field) {
  if (type.name === "Media" && field.name === "url") {
    if (!field.args?.includes((arg) => arg.name === "culture")) {
      // Add missing culture argument
      field.args?.push({
        name: "culture",
        description:
          " The culture to fetch the value in. If empty the contents culture will be used.",
        type: {
          kind: "SCALAR",
          name: "String",
          ofType: null,
        },
        defaultValue: null,
      });
    }
  }
}

/**
 * The schema generated by Umbraco isn't interpreted correctly by WebStorm, because the arguments order changes between interface and implementation on some fields.
 * Ensure all arguments are sorted the same way to avoid this.
 * @param schema
 * @param pluginConfig
 * @param pluginConfig.heartcore {boolean} Include the Heartcore fixes
 * @return {*}
 */
function sortSchemaArgs(schema, pluginConfig) {
  schema.__schema.types.forEach((type) => {
    type.fields?.forEach((field) => {
      if (pluginConfig.heartcore) applyUmbracoHeartcoreFixes(type, field);

      field.args?.sort((a, b) => {
        if (a.name < b.name) {
          return -1;
        }
        if (a.name > b.name) {
          return 1;
        }
        return 0;
      });
    });
  });

  return schema;
}

module.exports = {
  plugin: (schema, _documents, { heartcore, ...pluginConfig } = {}) => {
    const introspection = graphql.introspectionFromSchema(schema, {
      descriptions: true,
      directiveIsRepeatable: true,
      ...pluginConfig,
    });

    return JSON.stringify(
      sortSchemaArgs(introspection, { heartcore }),
      null,
      2
    );
  },
};
